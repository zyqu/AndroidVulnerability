// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 

package org.apache.cordova.api;

import android.content.Intent;
import android.webkit.WebView;
import org.json.JSONArray;
import org.json.JSONObject;

// Referenced classes of package org.apache.cordova.api:
//            IPlugin, PluginResult, CordovaInterface

public abstract class Plugin
    implements IPlugin
{

    public Plugin()
    {
    }

    public void error(String s, String s1)
    {
        ctx.sendJavascript((new PluginResult(PluginResult.Status.ERROR, s)).toErrorCallbackString(s1));
    }

    public void error(PluginResult pluginresult, String s)
    {
        ctx.sendJavascript(pluginresult.toErrorCallbackString(s));
    }

    public void error(JSONObject jsonobject, String s)
    {
        ctx.sendJavascript((new PluginResult(PluginResult.Status.ERROR, jsonobject)).toErrorCallbackString(s));
    }

    public abstract PluginResult execute(String s, JSONArray jsonarray, String s1);

    public boolean isSynch(String s)
    {
        return false;
    }

    public void onActivityResult(int i, int j, Intent intent)
    {
    }

    public void onDestroy()
    {
    }

    public void onMessage(String s, Object obj)
    {
    }

    public void onNewIntent(Intent intent)
    {
    }

    public boolean onOverrideUrlLoading(String s)
    {
        return false;
    }

    public void onPause(boolean flag)
    {
    }

    public void onResume(boolean flag)
    {
    }

    public void sendJavascript(String s)
    {
        ctx.sendJavascript(s);
    }

    public void setContext(CordovaInterface cordovainterface)
    {
        ctx = cordovainterface;
    }

    public void setView(WebView webview)
    {
        webView = webview;
    }

    public void success(String s, String s1)
    {
        ctx.sendJavascript((new PluginResult(PluginResult.Status.OK, s)).toSuccessCallbackString(s1));
    }

    public void success(PluginResult pluginresult, String s)
    {
        ctx.sendJavascript(pluginresult.toSuccessCallbackString(s));
    }

    public void success(JSONObject jsonobject, String s)
    {
        ctx.sendJavascript((new PluginResult(PluginResult.Status.OK, jsonobject)).toSuccessCallbackString(s));
    }

    public CordovaInterface ctx;
    public String id;
    public WebView webView;
}
