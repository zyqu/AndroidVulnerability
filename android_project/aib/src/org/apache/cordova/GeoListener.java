// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 

package org.apache.cordova;

import android.location.Location;
import android.location.LocationManager;
import org.apache.cordova.api.CordovaInterface;

// Referenced classes of package org.apache.cordova:
//            GeoBroker, GpsListener, NetworkListener

public class GeoListener
{

    GeoListener(GeoBroker geobroker, String s, int i)
    {
        id = s;
        interval = i;
        broker = geobroker;
        mGps = null;
        mNetwork = null;
        mLocMan = (LocationManager)geobroker.ctx.getSystemService("location");
        if(mLocMan.getProvider("gps") != null)
            mGps = new GpsListener(geobroker.ctx, i, this);
        if(mLocMan.getProvider("network") != null)
            mNetwork = new NetworkListener(geobroker.ctx, i, this);
    }

    public void destroy()
    {
        stop();
    }

    void fail(int i, String s)
    {
        broker.sendJavascript((new StringBuilder()).append("navigator._geo.fail('").append(id).append("', '").append(i).append("', '").append(s).append("');").toString());
        stop();
    }

    void start(int i)
    {
        if(mGps != null)
            mGps.start(i);
        if(mNetwork != null)
            mNetwork.start(i);
        if(mNetwork == null && mGps == null)
            fail(POSITION_UNAVAILABLE, "No location providers available.");
    }

    void stop()
    {
        if(mGps != null)
            mGps.stop();
        if(mNetwork != null)
            mNetwork.stop();
    }

    void success(Location location)
    {
        String s = (new StringBuilder()).append(location.getLatitude()).append(",").append(location.getLongitude()).append(", ").append(location.getAltitude()).append(",").append(location.getAccuracy()).append(",").append(location.getBearing()).append(",").append(location.getSpeed()).append(",").append(location.getTime()).toString();
        if(id == "global")
            stop();
        broker.sendJavascript((new StringBuilder()).append("navigator._geo.success('").append(id).append("',").append(s).append(");").toString());
    }

    public static int PERMISSION_DENIED = 1;
    public static int POSITION_UNAVAILABLE = 2;
    public static int TIMEOUT = 3;
    private GeoBroker broker;
    String failCallback;
    String id;
    int interval;
    GpsListener mGps;
    LocationManager mLocMan;
    NetworkListener mNetwork;
    String successCallback;

}
