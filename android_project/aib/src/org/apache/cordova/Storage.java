// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 

package org.apache.cordova;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteException;
import java.io.File;
import java.io.PrintStream;
import org.apache.cordova.api.CordovaInterface;
import org.apache.cordova.api.Plugin;
import org.apache.cordova.api.PluginResult;
import org.json.*;

public class Storage extends Plugin
{

    public Storage()
    {
        myDb = null;
        path = null;
        dbName = null;
    }

    private boolean isDDL(String s)
    {
        String s1 = s.toLowerCase();
        boolean flag;
        if(s1.startsWith("drop") || s1.startsWith("create") || s1.startsWith("alter") || s1.startsWith("truncate"))
            flag = true;
        else
            flag = false;
        return flag;
    }

    public PluginResult execute(String s, JSONArray jsonarray, String s1)
    {
        org.apache.cordova.api.PluginResult.Status status = org.apache.cordova.api.PluginResult.Status.OK;
        if(!s.equals("openDatabase")) goto _L2; else goto _L1
_L1:
        openDatabase(jsonarray.getString(0), jsonarray.getString(1), jsonarray.getString(2), jsonarray.getLong(3));
_L4:
        PluginResult pluginresult;
        pluginresult = new PluginResult(status, "");
        break MISSING_BLOCK_LABEL_162;
_L2:
        String as[];
        if(!s.equals("executeSql"))
            continue; /* Loop/switch isn't completed */
        if(!jsonarray.isNull(1))
            break; /* Loop/switch isn't completed */
        as = new String[0];
_L6:
        executeSql(jsonarray.getString(0), as, jsonarray.getString(2));
        if(true) goto _L4; else goto _L3
        JSONException jsonexception;
        jsonexception;
        pluginresult = new PluginResult(org.apache.cordova.api.PluginResult.Status.JSON_EXCEPTION);
        break MISSING_BLOCK_LABEL_162;
_L3:
        JSONArray jsonarray1;
        int i;
        int j;
        jsonarray1 = jsonarray.getJSONArray(1);
        i = jsonarray1.length();
        as = new String[i];
        j = 0;
_L7:
        if(j >= i) goto _L6; else goto _L5
_L5:
        as[j] = jsonarray1.getString(j);
        j++;
          goto _L7
          goto _L6
        return pluginresult;
    }

    public void executeSql(String s, String as[], String s1)
    {
        try
        {
            if(isDDL(s))
            {
                myDb.execSQL(s);
                sendJavascript((new StringBuilder()).append("require('cordova/plugin/android/storage').completeQuery('").append(s1).append("', '');").toString());
            } else
            {
                Cursor cursor = myDb.rawQuery(s, as);
                processResults(cursor, s1);
                cursor.close();
            }
        }
        catch(SQLiteException sqliteexception)
        {
            sqliteexception.printStackTrace();
            System.out.println((new StringBuilder()).append("Storage.executeSql(): Error=").append(sqliteexception.getMessage()).toString());
            sendJavascript((new StringBuilder()).append("require('cordova/plugin/android/storage').fail('").append(sqliteexception.getMessage()).append("','").append(s1).append("');").toString());
        }
    }

    public boolean isSynch(String s)
    {
        return true;
    }

    public void onDestroy()
    {
        if(myDb != null)
        {
            myDb.close();
            myDb = null;
        }
    }

    public void openDatabase(String s, String s1, String s2, long l)
    {
        if(myDb != null)
            myDb.close();
        if(path == null)
            path = ctx.getApplicationContext().getDir("database", 0).getPath();
        dbName = (new StringBuilder()).append(path).append(File.pathSeparator).append(s).append(".db").toString();
        myDb = SQLiteDatabase.openOrCreateDatabase(dbName, null);
    }

    public void processResults(Cursor cursor, String s)
    {
        String s1 = "[]";
        if(!cursor.moveToFirst()) goto _L2; else goto _L1
_L1:
        JSONArray jsonarray;
        int i;
        jsonarray = new JSONArray();
        i = cursor.getColumnCount();
_L7:
        JSONObject jsonobject;
        int j;
        jsonobject = new JSONObject();
        j = 0;
_L3:
        if(j >= i)
            break MISSING_BLOCK_LABEL_76;
        jsonobject.put(cursor.getColumnName(j), cursor.getString(j));
        j++;
          goto _L3
        jsonarray.put(jsonobject);
_L5:
        if(cursor.moveToNext())
            continue; /* Loop/switch isn't completed */
        s1 = jsonarray.toString();
_L2:
        sendJavascript((new StringBuilder()).append("require('cordova/plugin/android/storage').completeQuery('").append(s).append("', ").append(s1).append(");").toString());
        return;
        JSONException jsonexception;
        jsonexception;
        jsonexception.printStackTrace();
        if(true) goto _L5; else goto _L4
_L4:
        if(true) goto _L7; else goto _L6
_L6:
    }

    private static final String ALTER = "alter";
    private static final String CREATE = "create";
    private static final String DROP = "drop";
    private static final String TRUNCATE = "truncate";
    String dbName;
    SQLiteDatabase myDb;
    String path;
}
