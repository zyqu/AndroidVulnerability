// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 

package org.apache.cordova;

import android.util.Log;
import org.apache.cordova.api.CordovaInterface;
import org.apache.cordova.api.Plugin;
import org.apache.cordova.api.PluginResult;
import org.json.*;

// Referenced classes of package org.apache.cordova:
//            ContactAccessorSdk5, ContactAccessor

public class ContactManager extends Plugin
{

    public ContactManager()
    {
    }

    public PluginResult execute(String s, JSONArray jsonarray, String s1)
    {
        org.apache.cordova.api.PluginResult.Status status = org.apache.cordova.api.PluginResult.Status.OK;
        if(!android.os.Build.VERSION.RELEASE.startsWith("1.")) goto _L2; else goto _L1
_L1:
        JSONObject jsonobject2 = null;
        JSONObject jsonobject3 = new JSONObject();
        jsonobject3.put("code", 5);
        jsonobject3.put("message", "Contacts are not supported in Android 1.X devices");
        jsonobject2 = jsonobject3;
_L3:
        PluginResult pluginresult = new PluginResult(org.apache.cordova.api.PluginResult.Status.ERROR, jsonobject2);
_L4:
        return pluginresult;
        JSONException jsonexception3;
        jsonexception3;
        JSONException jsonexception2 = jsonexception3;
_L5:
        Log.e("Contact Query", jsonexception2.getMessage(), jsonexception2);
          goto _L3
_L2:
label0:
        {
            if(contactAccessor == null)
                contactAccessor = new ContactAccessorSdk5(webView, ctx.getContext());
            try
            {
                if(!s.equals("search"))
                    break label0;
                pluginresult = new PluginResult(status, contactAccessor.search(jsonarray.getJSONArray(0), jsonarray.optJSONObject(1)));
            }
            catch(JSONException jsonexception)
            {
                Log.e("Contact Query", jsonexception.getMessage(), jsonexception);
                pluginresult = new PluginResult(org.apache.cordova.api.PluginResult.Status.JSON_EXCEPTION);
            }
        }
          goto _L4
        if(s.equals("save"))
        {
            String s2 = contactAccessor.save(jsonarray.getJSONObject(0));
            if(s2 == null)
                break MISSING_BLOCK_LABEL_291;
            JSONObject jsonobject1 = contactAccessor.getContactById(s2);
            if(jsonobject1 == null)
                break MISSING_BLOCK_LABEL_291;
            pluginresult = new PluginResult(status, jsonobject1);
        } else
        {
            if(!s.equals("remove") || !contactAccessor.remove(jsonarray.getString(0)))
                break MISSING_BLOCK_LABEL_291;
            pluginresult = new PluginResult(status, "");
        }
          goto _L4
        JSONObject jsonobject = new JSONObject();
        jsonobject.put("code", 0);
        pluginresult = new PluginResult(org.apache.cordova.api.PluginResult.Status.ERROR, jsonobject);
          goto _L4
        JSONException jsonexception1;
        jsonexception1;
        jsonexception2 = jsonexception1;
        jsonobject2 = jsonobject3;
          goto _L5
    }

    public static final int INVALID_ARGUMENT_ERROR = 1;
    public static final int IO_ERROR = 4;
    private static final String LOG_TAG = "Contact Query";
    public static final int NOT_SUPPORTED_ERROR = 5;
    public static final int PENDING_OPERATION_ERROR = 3;
    public static final int PERMISSION_DENIED_ERROR = 20;
    public static final int TIMEOUT_ERROR = 2;
    public static final int UNKNOWN_ERROR;
    private ContactAccessor contactAccessor;
}
