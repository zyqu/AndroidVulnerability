// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 

package org.apache.cordova;

import android.location.*;
import android.os.Bundle;
import java.io.PrintStream;
import org.apache.cordova.api.CordovaInterface;

// Referenced classes of package org.apache.cordova:
//            GeoListener

public class GpsListener
    implements LocationListener
{

    public GpsListener(CordovaInterface cordovainterface, int i, GeoListener geolistener)
    {
        hasData = false;
        running = false;
        owner = geolistener;
        mCtx = cordovainterface;
        mLocMan = (LocationManager)mCtx.getSystemService("location");
        running = false;
        start(i);
    }

    public Location getLocation()
    {
        cLoc = mLocMan.getLastKnownLocation("gps");
        if(cLoc != null)
            hasData = true;
        return cLoc;
    }

    public boolean hasLocation()
    {
        return hasData;
    }

    public void onLocationChanged(Location location)
    {
        System.out.println("GpsListener: The location has been updated!");
        hasData = true;
        cLoc = location;
        owner.success(location);
    }

    public void onProviderDisabled(String s)
    {
        owner.fail(GeoListener.POSITION_UNAVAILABLE, "GPS provider disabled.");
    }

    public void onProviderEnabled(String s)
    {
        System.out.println((new StringBuilder()).append("GpsListener: The provider ").append(s).append(" is enabled").toString());
    }

    public void onStatusChanged(String s, int i, Bundle bundle)
    {
        System.out.println((new StringBuilder()).append("GpsListener: The status of the provider ").append(s).append(" has changed").toString());
        if(i == 0)
        {
            System.out.println((new StringBuilder()).append("GpsListener: ").append(s).append(" is OUT OF SERVICE").toString());
            owner.fail(GeoListener.POSITION_UNAVAILABLE, "GPS out of service.");
        } else
        if(i == 1)
            System.out.println((new StringBuilder()).append("GpsListener: ").append(s).append(" is TEMPORARILY_UNAVAILABLE").toString());
        else
            System.out.println((new StringBuilder()).append("GpsListener: ").append(s).append(" is Available").toString());
    }

    public void start(int i)
    {
        if(!running)
        {
            running = true;
            mLocMan.requestLocationUpdates("gps", i, 0.0F, this);
            getLocation();
            if(hasData)
                owner.success(cLoc);
        }
    }

    public void stop()
    {
        if(running)
            mLocMan.removeUpdates(this);
        running = false;
    }

    private Location cLoc;
    private boolean hasData;
    private CordovaInterface mCtx;
    private LocationManager mLocMan;
    private GeoListener owner;
    private boolean running;
}
