// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 

package org.apache.cordova;

import android.content.Context;
import android.os.Environment;
import android.os.StatFs;
import java.io.File;

public class DirectoryManager
{

    public DirectoryManager()
    {
    }

    private static File constructFilePaths(String s, String s1)
    {
        File file;
        if(s1.startsWith(s))
            file = new File(s1);
        else
            file = new File((new StringBuilder()).append(s).append("/").append(s1).toString());
        return file;
    }

    private static long freeSpaceCalculation(String s)
    {
        StatFs statfs = new StatFs(s);
        return ((long)statfs.getBlockSize() * (long)statfs.getAvailableBlocks()) / 1024L;
    }

    protected static long getFreeDiskSpace(boolean flag)
    {
        long l;
        long l1;
        if(Environment.getExternalStorageState().equals("mounted"))
        {
            l1 = freeSpaceCalculation(Environment.getExternalStorageDirectory().getPath());
        } else
        {
label0:
            {
                if(!flag)
                    break label0;
                l1 = freeSpaceCalculation("/");
            }
        }
        l = l1;
_L2:
        return l;
        l = -1L;
        if(true) goto _L2; else goto _L1
_L1:
    }

    protected static String getTempDirectoryPath(Context context)
    {
        File file;
        if(Environment.getExternalStorageState().equals("mounted"))
            file = new File((new StringBuilder()).append(Environment.getExternalStorageDirectory().getAbsolutePath()).append("/Android/data/").append(context.getPackageName()).append("/cache/").toString());
        else
            file = context.getCacheDir();
        if(!file.exists())
            file.mkdirs();
        return file.getAbsolutePath();
    }

    protected static boolean testFileExists(String s)
    {
        boolean flag;
        if(testSaveLocationExists() && !s.equals(""))
            flag = constructFilePaths(Environment.getExternalStorageDirectory().toString(), s).exists();
        else
            flag = false;
        return flag;
    }

    protected static boolean testSaveLocationExists()
    {
        boolean flag;
        if(Environment.getExternalStorageState().equals("mounted"))
            flag = true;
        else
            flag = false;
        return flag;
    }

    private static final String LOG_TAG = "DirectoryManager";
}
