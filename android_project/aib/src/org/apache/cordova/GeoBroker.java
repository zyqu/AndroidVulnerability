// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 

package org.apache.cordova;

import java.util.*;
import org.apache.cordova.api.Plugin;
import org.apache.cordova.api.PluginResult;
import org.json.JSONArray;
import org.json.JSONException;

// Referenced classes of package org.apache.cordova:
//            GeoListener

public class GeoBroker extends Plugin
{

    public GeoBroker()
    {
        geoListeners = new HashMap();
    }

    public PluginResult execute(String s, JSONArray jsonarray, String s1)
    {
        org.apache.cordova.api.PluginResult.Status status = org.apache.cordova.api.PluginResult.Status.OK;
        if(!s.equals("getCurrentLocation")) goto _L2; else goto _L1
_L1:
        getCurrentLocation(jsonarray.getBoolean(0), jsonarray.getInt(1), jsonarray.getInt(2));
_L5:
        PluginResult pluginresult;
        pluginresult = new PluginResult(status, "");
        break MISSING_BLOCK_LABEL_134;
_L2:
        if(s.equals("start"))
        {
            pluginresult = new PluginResult(status, start(jsonarray.getString(0), jsonarray.getBoolean(1), jsonarray.getInt(2), jsonarray.getInt(3)));
            break MISSING_BLOCK_LABEL_134;
        }
          goto _L3
        JSONException jsonexception;
        jsonexception;
        pluginresult = new PluginResult(org.apache.cordova.api.PluginResult.Status.JSON_EXCEPTION);
        break MISSING_BLOCK_LABEL_134;
_L3:
        if(!s.equals("stop")) goto _L5; else goto _L4
_L4:
        stop(jsonarray.getString(0));
          goto _L5
        return pluginresult;
    }

    public void getCurrentLocation(boolean flag, int i, int j)
    {
        if(global == null)
            global = new GeoListener(this, "global", j);
        else
            global.start(j);
    }

    public boolean isSynch(String s)
    {
        return true;
    }

    public void onDestroy()
    {
        for(Iterator iterator = geoListeners.entrySet().iterator(); iterator.hasNext(); ((GeoListener)((java.util.Map.Entry)iterator.next()).getValue()).destroy());
        geoListeners.clear();
        if(global != null)
            global.destroy();
        global = null;
    }

    public String start(String s, boolean flag, int i, int j)
    {
        GeoListener geolistener = (GeoListener)geoListeners.get(s);
        if(geolistener == null)
        {
            geolistener = new GeoListener(this, s, j);
            geoListeners.put(s, geolistener);
        }
        geolistener.start(j);
        return s;
    }

    public void stop(String s)
    {
        GeoListener geolistener = (GeoListener)geoListeners.remove(s);
        if(geolistener != null)
            geolistener.stop();
    }

    private HashMap geoListeners;
    private GeoListener global;
}
