// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 

package org.apache.cordova;

import android.hardware.*;
import java.util.List;
import org.apache.cordova.api.CordovaInterface;
import org.apache.cordova.api.Plugin;
import org.apache.cordova.api.PluginResult;
import org.json.JSONArray;

public class TempListener extends Plugin
    implements SensorEventListener
{

    public TempListener()
    {
    }

    public PluginResult execute(String s, JSONArray jsonarray, String s1)
    {
        org.apache.cordova.api.PluginResult.Status status = org.apache.cordova.api.PluginResult.Status.OK;
        if(!s.equals("start")) goto _L2; else goto _L1
_L1:
        start();
_L4:
        return new PluginResult(status, "");
_L2:
        if(s.equals("stop"))
            stop();
        if(true) goto _L4; else goto _L3
_L3:
    }

    public void onAccuracyChanged(Sensor sensor, int i)
    {
    }

    public void onDestroy()
    {
        stop();
    }

    public void onSensorChanged(SensorEvent sensorevent)
    {
        float f = sensorevent.values[0];
        sendJavascript((new StringBuilder()).append("gotTemp(").append(f).append(");").toString());
    }

    public void setContext(CordovaInterface cordovainterface)
    {
        super.setContext(cordovainterface);
        sensorManager = (SensorManager)cordovainterface.getSystemService("sensor");
    }

    public void start()
    {
        List list = sensorManager.getSensorList(7);
        if(list.size() > 0)
        {
            mSensor = (Sensor)list.get(0);
            sensorManager.registerListener(this, mSensor, 3);
        }
    }

    public void stop()
    {
        sensorManager.unregisterListener(this);
    }

    Sensor mSensor;
    private SensorManager sensorManager;
}
